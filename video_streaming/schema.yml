openapi: 3.0.3
info:
  title: A manager for playlist's streaming videos in local mode!
  version: 0.0.0
  description: Management the playlists made in local mode
paths:
  /api/classifications/:
    get:
      operationId: api_classifications_list
      parameters:
      - in: query
        name: classification_is
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClassificationList'
          description: ''
  /api/classifications/{id}/:
    get:
      operationId: api_classifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Clasificación.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
          description: ''
  /api/countries/:
    get:
      operationId: api_countries_list
      parameters:
      - in: query
        name: country_is
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
  /api/countries/{id}/:
    get:
      operationId: api_countries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this País.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/filmgenres/:
    get:
      operationId: api_filmgenres_list
      parameters:
      - in: query
        name: film_genre_is
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFilmGenreList'
          description: ''
  /api/filmgenres/{id}/:
    get:
      operationId: api_filmgenres_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Genero.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilmGenre'
          description: ''
  /api/playlists/:
    get:
      operationId: api_playlists_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlaylistList'
          description: ''
    post:
      operationId: api_playlists_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Playlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Playlist'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
          description: ''
  /api/playlists/{id}/:
    get:
      operationId: api_playlists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
          description: ''
    put:
      operationId: api_playlists_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Playlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Playlist'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
          description: ''
    delete:
      operationId: api_playlists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/providers/:
    get:
      operationId: api_providers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: provider_is
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderList'
          description: ''
  /api/providers/{id}/:
    get:
      operationId: api_providers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Proveedor.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
  /api/seasons/:
    get:
      operationId: api_seasons_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSeasonList'
          description: ''
    post:
      operationId: api_seasons_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Season'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Season'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
  /api/seasons/{id}/:
    get:
      operationId: api_seasons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Temporada.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
    patch:
      operationId: api_seasons_partial_update
      description: Update with data of the serie's season
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Temporada.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeason'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeason'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeason'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
    delete:
      operationId: api_seasons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Temporada.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: username
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Usuario.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Usuario.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Usuario.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{id}/set_password/:
    post:
      operationId: api_users_set_password_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Usuario.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/videos/:
    get:
      operationId: api_videos_list
      parameters:
      - in: query
        name: classification_is_like
        schema:
          type: string
      - in: query
        name: country_is
        schema:
          type: string
      - in: query
        name: genre_is_like
        schema:
          type: string
      - in: query
        name: name_is_like
        schema:
          type: string
      - in: query
        name: num_year
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: provider_is
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: video_type
        schema:
          type: string
          title: Tipo
          enum:
          - D
          - M
          - R
          - S
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
          description: ''
    post:
      operationId: api_videos_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/videos-in-playlists/:
    get:
      operationId: api_videos_in_playlists_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlaylistVideoList'
          description: ''
  /api/videos-in-playlists/{id}/:
    get:
      operationId: api_videos_in_playlists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this playlist video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistVideo'
          description: ''
    patch:
      operationId: api_videos_in_playlists_partial_update
      description: Update the serie how viewed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this playlist video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlaylistVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlaylistVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlaylistVideo'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistVideo'
          description: ''
  /api/videos/{id}/:
    get:
      operationId: api_videos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: api_videos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: api_videos_partial_update
      description: Unsubscribe a video
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: api_videos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Video.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Classification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        age_rating:
          type: string
          title: Clasificación
          maxLength: 5
      required:
      - age_rating
      - id
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        country:
          type: string
          title: País
          maxLength: 50
        iso_code:
          type: string
          title: Codigo ISO
          maxLength: 3
      required:
      - country
      - id
      - iso_code
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    FilmGenre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        film_genre:
          type: string
          title: Genero cinematográfico
          maxLength: 50
      required:
      - film_genre
      - id
    PaginatedClassificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
    PaginatedCountryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedFilmGenreList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FilmGenre'
    PaginatedPlaylistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Playlist'
    PaginatedPlaylistVideoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlaylistVideo'
    PaginatedProviderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
    PaginatedSeasonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Season'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVideoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    PatchedPlaylistVideo:
      type: object
      properties:
        playlist_id:
          type: integer
        season_id:
          $ref: '#/components/schemas/Season'
        viewed:
          type: boolean
          title: Visto
    PatchedSeason:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        video:
          $ref: '#/components/schemas/Video'
        chapters:
          type: integer
          maximum: 32767
          minimum: -32768
          title: Capitulos
        number_season:
          type: integer
          maximum: 32767
          minimum: -32768
          title: Temporada
    PatchedVideo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nombre
          maxLength: 200
        num_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Año
        video_type:
          allOf:
          - $ref: '#/components/schemas/VideoTypeEnum'
          title: Tipo
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Duración
        classification:
          type: integer
          title: Clasificación
        film_genre:
          type: array
          items:
            type: integer
            title: Genero Cinematográfico
          title: Genero Cinematográfico
        country:
          type: array
          items:
            type: integer
            title: Pais
          title: Pais
        provider:
          type: array
          items:
            type: integer
            title: Proveedor
          title: Proveedor
    Playlist:
      type: object
      properties:
        user:
          type: integer
        provider:
          type: integer
        video:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - provider
      - user
      - video
    PlaylistVideo:
      type: object
      properties:
        playlist_id:
          type: integer
        season_id:
          $ref: '#/components/schemas/Season'
        viewed:
          type: boolean
          title: Visto
      required:
      - playlist_id
      - season_id
    Provider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        provider:
          type: string
          title: Proveedor
          maxLength: 15
      required:
      - id
      - provider
    Season:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        video:
          $ref: '#/components/schemas/Video'
        chapters:
          type: integer
          maximum: 32767
          minimum: -32768
          title: Capitulos
        number_season:
          type: integer
          maximum: 32767
          minimum: -32768
          title: Temporada
      required:
      - id
      - video
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          title: Contraseña
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Último ingreso
        is_superuser:
          type: boolean
          title: Es superusuario
          description: Indica que este usuario posee todos los permisos sin que sea
            necesario asignarle los mismos en forma explícita.
        username:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          title: Correo Electrónico
          maxLength: 255
        name:
          type: string
          nullable: true
          title: Nombre
          maxLength: 255
        last_name:
          type: string
          nullable: true
          title: Apellidos
          maxLength: 255
        is_active:
          type: boolean
        is_staff:
          type: boolean
        groups:
          type: array
          items:
            type: integer
            title: Grupos
          title: Grupos
          description: Los grupos a los que pertenece este usuario. Un usuario obtendrá
            todos los permisos concedidos para cada uno de su grupo.
        user_permissions:
          type: array
          items:
            type: integer
            title: Permisos de usuario
          title: Permisos de usuario
          description: Permisos específicos para este usuario
      required:
      - email
      - id
      - password
      - username
    Video:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nombre
          maxLength: 200
        num_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Año
        video_type:
          allOf:
          - $ref: '#/components/schemas/VideoTypeEnum'
          title: Tipo
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Duración
        classification:
          type: integer
          title: Clasificación
        film_genre:
          type: array
          items:
            type: integer
            title: Genero Cinematográfico
          title: Genero Cinematográfico
        country:
          type: array
          items:
            type: integer
            title: Pais
          title: Pais
        provider:
          type: array
          items:
            type: integer
            title: Proveedor
          title: Proveedor
      required:
      - classification
      - country
      - film_genre
      - id
      - name
      - num_year
      - provider
      - video_type
    VideoTypeEnum:
      enum:
      - S
      - M
      - D
      - R
      type: string
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
